<?php


/**
 * @file
 * Install hooks for Devour.
 */


/**
 * Implementation of hook_requirements().
 */
function devour_requirements($phase) {
  $requirements = array();
  return $requirements;
}

/**
 * Implementation of hook_schema().
 */
function devour_schema() {
  $schema['devour_stores'] = array(
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'length' => 255,
	 'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The unique id of the store.'
      ),
      'site' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The site name, i.e. Walmart.'
      ),
      'sid' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
      'street' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
      'locality' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
      'phone' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
      'services' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
      'store_hours' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
      'pharmacy_hours' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The store id assigned from the site.'
      ),
    ),
    'primary key' => array('id'),
  );
  $schema['devour_storesbyzip'] = array(
    'fields' => array(
      'zip' => array(
        'type' => 'varchar',
        'length' => 25,
        'not null' => TRUE,
        'description' => 'The unique zip code.'
      ),
      'site' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'The site name, i.e. Walmart.'
      ),
      'stores' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
	 'description' => 'Store IDs'
      ),
    ),
    'primary key' => array('zip'),
  );
  $schema['devour_profiles'] = array(
    'fields' => array(
      'profile_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The primary identifier for a profile.',
      ),
      'name' => array(
        'description' => 'The name of the profile.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
      'site_url' => array(
        'description' => 'The main URL of the site.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
      'site_start' => array(
        'description' => 'The starting URL where data needs to be extracted.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
      'post_url' => array(
        'description' => 'The POST URL which returns the page with data.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
    ),
    'primary key' => array('profile_id'),
  );
  $schema['devour_settings'] = array(
    'fields' => array(
      'brand' => array(
        'description' => 'The branded name to use on the setup form.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE
      ),
    ),
  );
  $schema['devour_users'] = array(
    'fields' => array(
      'uid' => array(
        'description' => 'The user id of the user.',
        'type' => 'int',
        'length' => 255,
        'not null' => TRUE
      ),
      'location' => array(
        'description' => 'The full address of the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
      'street_no' => array(
        'description' => 'The street number of the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
      'stree_name' => array(
        'description' => 'The street name of the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
      'city' => array(
        'description' => 'The city of the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
      'state' => array(
        'description' => 'The state of the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
      'zip' => array(
        'description' => 'The zip code of the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
      'stores' => array(
        'description' => 'The stores chosen by the user .',
        'type' => 'varchar',
        'length' => 255,
      ),
    ),
     'primary key' => array('uid'),
  );
  return $schema;
}

/**
 * Implementation of hook_install().
 */
function devour_install() {
  	// Load default data
	//_devour_setup_database_defaults();
}

function _devour_setup_database_defaults() {
  if (variable_get("devour_file_name", NULL)) {
    require_once DRUPAL_ROOT . '/'. drupal_get_path('module', 'devour') .'/includes/crud.inc';
    require_once DRUPAL_ROOT . '/'. drupal_get_path('module', 'devour') .'/backup_migrate.module';
    require_once DRUPAL_ROOT . '/'. drupal_get_path('module', 'devour') .'/includes/profiles.inc';
    require_once DRUPAL_ROOT . '/'. drupal_get_path('module', 'devour') .'/includes/files.inc';

    $settings = array(
      'profile_id' => 'default',
      'filename' => variable_get("devour_file_name", _devour_default_filename()),
      'append_timestamp' => variable_get("devour_append_timestamp", FALSE) ? 1 : 0,
      'timestamp_format' => variable_get("devour_timestamp_format", 'Y-m-d\TH-i-s'),
      'filters' => array(
        'compression' => variable_get("devour_compression", "none"),
        'exclude_tables' => variable_get("devour_exclude_tables", array()),
        'nodata_tables' => variable_get("devour_nodata_tables", array()),
      ),
      'name' => t('Default Settings'),
    );
    $profile = devour_crud_create_item('profile', $settings);
    $profile->save();
    variable_set("devour_profile_id", 'default');

    // Set up the default schedules.
    if (variable_get("devour_schedule_backup_period", 0)) {
      require_once DRUPAL_ROOT . '/'. drupal_get_path('module', 'devour') .'/includes/schedules.inc';
      $schedule = array(
        'name' => t('Default Schedule'),
        'profile_id' => $profile->get_id(),
        'enabled' => 1,
        'destination_id' => 'scheduled',
        'period' => array('number' => variable_get("devour_schedule_backup_period", 0), 'type' => 'hours'),
        'keep' => variable_get("devour_schedule_backup_keep", 0),
      );
      $schedule = devour_crud_create_item('schedule', $schedule);
      $schedule->save();
    }
  }
}

/**
 * Remove variables on uninstall.
 */
function devour_uninstall() {
  db_query("DELETE FROM {variable} WHERE name LIKE 'devour_%'");
  cache_clear_all('variables', 'cache');
}

/**
 * For updating examples see Backup and Migrate install file
 */

